	root /home/developer/devel/perl/Slaver/root;

#	limit_conn_log_level warn;
#	limit_conn perip 10;
#	limit_conn perserver 1024;

#	limit_req zone=hundred burst=128;

	location / {
	    gzip off;
	    gzip_static off;

	    if ($request_method = OPTIONS) {
		add_header Content-Length 0;
		add_header Content-Type text/plain;

		add_header Access-Control-Allow-Origin "$http_origin";
		add_header Access-Control-Allow-Credentials "true";
		add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
		add_header Access-Control-Allow-Methods "$http_access_control_request_method";

		return 204;
	    }

	    root /home/developer/devel/perl/Slaver/root;

	    index index.html index.htm;

	    proxy_set_header Host $http_host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_set_header X-Forwarded-Host $http_host;
	    proxy_set_header X-Forwarded-Port $server_port;

#	    more_set_headers "Access-Control-Allow-Origin: $http_origin";

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";

#	    proxy_pass http://unix:/home/developer/devel/perl/Slaver/var/run/slaver.sock;
#	    proxy_pass http://127.0.0.1:8080;
	    proxy_pass http://slaver;
        }

	location ~* /data/avatars/ {
	    gzip off;
	    gzip_static off;

	    gridfs avatars root_collection=fs field=_id type=objectid;
	    mongo 127.0.0.1:27017;

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";
	    add_header Cache-Control "public";

	    access_log off;
	    expires max;
	}

	location ~* /data/files/ {
	    gzip off;
	    gzip_static off;

	    gridfs data root_collection=fs field=_id type=objectid;
	    mongo 127.0.0.1:27017;

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";
	    add_header Cache-Control "public";

	    access_log off;
	    expires max;
	}

	location ~* /data/thumbnails/ {
	    gzip off;
	    gzip_static off;

	    gridfs thumbnails root_collection=fs field=_id type=objectid;
	    mongo 127.0.0.1:27017;

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";
	    add_header Cache-Control "public";

	    access_log off;
	    expires max;
	}

	location /static {
	    gzip on;
	    gzip_static on;

	    root /home/developer/devel/perl/Slaver/root;

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";
	    add_header Cache-Control "public";

	    access_log off;
	    expires max;
	}

	location /ws/sys/stats {
	    gzip off;
	    gzip_static off;

	    if ($request_method = OPTIONS) {
		add_header Content-Length 0;
		add_header Content-Type text/plain;

		add_header Access-Control-Allow-Origin "$http_origin";
		add_header Access-Control-Allow-Credentials "true";
		add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
		add_header Access-Control-Allow-Methods "$http_access_control_request_method";
		return 204;
	    }

	    proxy_set_header X-Real-IP $remote_addr;

	    proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_set_header X-Forwarded-Host $http_host;
	    proxy_set_header X-Forwarded-Port $server_port;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	    proxy_set_header Host $http_host;
	    proxy_set_header Upgrade $http_upgrade;
#	    proxy_set_header Connection $connection_upgrade;

#	    more_set_headers "Access-Control-Allow-Origin: $http_origin";

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";

	    proxy_http_version 1.1;

	    proxy_pass http://127.0.0.1:5000/;
	}

	location /file/upload/broker/put {
	    gzip off;
	    gzip_static off;

	    if ($request_method = OPTIONS) {
		add_header Content-Length 0;
		add_header Content-Type text/plain;

		add_header Access-Control-Allow-Origin "$http_origin";
		add_header Access-Control-Allow-Credentials "true";
		add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
		add_header Access-Control-Allow-Methods "$http_access_control_request_method";

		return 204;
	    }

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";

	    upload_pass /file/upload/broker/slurp;
	    upload_pass_args on;
	    upload_resumable on;

	    upload_store /home/developer/devel/perl/Slaver/var/tmp/upload_store 1;
	    upload_state_store /home/developer/devel/perl/Slaver/var/tmp/upload_state 1;

	    # Allow uploaded files to be read only by user
	    upload_store_access user:rw group:rw all:r;

	    # Set specified fields in request body
	    upload_set_form_field "file_name" $upload_file_name;
	    upload_set_form_field "file_content_type" $upload_content_type;
	    upload_set_form_field "file_path" $upload_tmp_path;

	    # Inform backend about hash and size of a file
	    upload_aggregate_form_field "file_md5" $upload_file_md5;
	    upload_aggregate_form_field "file_size" $upload_file_size;

	    upload_cleanup 400 404 499 500-505;
	}

	location /user/profile/avatar/upload {
	    gzip off;
	    gzip_static off;

	    if ($request_method = OPTIONS) {
		add_header Content-Length 0;
		add_header Content-Type text/plain;

		add_header Access-Control-Allow-Origin "$http_origin";
		add_header Access-Control-Allow-Credentials "true";
		add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
		add_header Access-Control-Allow-Methods "$http_access_control_request_method";

		return 204;
	    }

	    add_header Access-Control-Allow-Origin "$http_origin";
	    add_header Access-Control-Allow-Credentials "true";
	    add_header Access-Control-Allow-Headers "$http_access_control_request_headers";
	    add_header Access-Control-Allow-Methods "$http_access_control_request_method";

	    upload_pass /user/profile/avatar/slurp;
	    upload_pass_args on;
	    upload_resumable on;

	    upload_store /home/developer/devel/perl/Slaver/var/tmp/upload_store 1;
	    upload_state_store /home/developer/devel/perl/Slaver/var/tmp/upload_state 1;

	    # Allow uploaded files to be read only by user
	    upload_store_access user:rw group:rw all:r;

	    # Set specified fields in request body
	    upload_set_form_field "file_name" $upload_file_name;
	    upload_set_form_field "file_content_type" $upload_content_type;
	    upload_set_form_field "file_path" $upload_tmp_path;

	    # Inform backend about hash and size of a file
	    upload_aggregate_form_field "file_md5" $upload_file_md5;
	    upload_aggregate_form_field "file_size" $upload_file_size;

	    upload_cleanup 400 404 499 500-505;
	}
